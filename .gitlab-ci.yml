stages:
  - docker
  - build
  - test
  - deploy

include:
  - remote: https://gitlab.com/opensavvy/ci-templates/-/raw/main/version.gitlab-ci.yml
  - remote: https://gitlab.com/opensavvy/ci-templates/-/raw/main/mirror.gitlab-ci.yml
  - remote: https://gitlab.com/opensavvy/ci-templates/-/raw/main/gradle.gitlab-ci.yml
  - remote: https://gitlab.com/opensavvy/ci-templates/-/raw/main/docker.gitlab-ci.yml

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_PIPELINE_SOURCE == 'schedule'
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_TAG

# region Check

check:
  extends: [ .os.gradle ]
  needs: [ os.version ]
  stage: test

  script:
    - >
      ./gradlew check
      -PappVersion=$project_version

  interruptible: true

# endregion
# region Build & containerize
# region Backend

backend:build:
  extends: [ .os.gradle ]
  needs: [ os.version ]
  stage: build
  script:
    - >
      ./gradlew backend:distTar
      -PappVersion=$project_version
    - mv backend/build/distributions/backend-*.tar backend.tar
  artifacts:
    paths:
      - backend.tar
    expose_as: 'Backend binaries'
  interruptible: true

backend:container:
  extends: [ .os.docker.build ]
  needs:
    - job: backend:build
      artifacts: true
  variables:
    dockerfile: backend/Dockerfile
    docker_context: backend
    image: backend
  interruptible: true

backend:container:publish:
  extends: [ .os.docker.rename ]
  needs: [ backend:container, os.version ]
  stage: deploy
  variables:
    image: backend
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_TAG
      variables:
        new_version: $project_version
  interruptible: false

# endregion
# region CLI JVM

cli-jvm:build:
  extends: [ .os.gradle ]
  needs: [ os.version ]
  stage: build
  script:
    - >
      ./gradlew app-cli:distTar
      -PappVersion=$project_version
    - mv app-cli/build/distributions/app-cli-*.tar cli-jvm.tar
  artifacts:
    paths:
      - cli-jvm.tar
    expose_as: 'JVM CLI binaries'
  interruptible: true

cli-jvm:container:
  extends: [ .os.docker.build ]
  needs:
    - job: cli-jvm:build
      artifacts: true
  variables:
    dockerfile: app-cli/jvm.dockerfile
    docker_context: app-cli
    image: app-cli/jvm
  interruptible: true

cli-jvm:container:publish:
  extends: [ .os.docker.rename ]
  needs: [ cli-jvm:container, os.version ]
  stage: deploy
  variables:
    image: app-cli/jvm
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_TAG
      variables:
        new_version: $project_version
  interruptible: false

# endregion
# endregion
# region Automatically mirror the previous layer of the playground

mirror-playground:
  stage: deploy
  extends: [ .os.mirror ]
  needs: [ ]

  variables:
    url: "$playground_parent"
    name: "$playground_parent_name"
    key: "$playground_mirroring_key"
    key_public: "$playground_mirroring_key_public"

  rules:
    - if: $playground_parent == null || $playground_parent_name == null
      when: never
    - if: $playground_mirroring_key == null || $playground_mirroring_key_public == null
      when: never
    - if: $CI_PIPELINE_SOURCE == 'schedule'
    - when: manual
      allow_failure: true

# endregion
